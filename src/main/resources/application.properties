server.port=8081
server.context-path=/adminportal
spring.thymeleaf.cache=false

#=======================================
#DATA SOURCE
#=======================================

#configuration for database connection
spring.datasource.url=jdbc:mysql://localhost:3306/bookstoredatabase?useSSL=false

#username password
spring.datasource.username=root
spring.datasource.password=root



#configuration for database connection
#spring.datasource.url=jdbc:mysql://bookstore-dev.c7s6jtwmpna6.us-east-2.rds.amazonaws.com:3306/abhibookstore_dev?useSSL=false
#
##username password
#spring.datasource.username=XXXXXXXXXXXXXXXXXXXX
#spring.datasource.password=XXXXXXXXXXXXXXXXXXXXXXXXXXX

#keep connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery= SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# ====================================
# LOGGING SLF4J
# ====================================
logging.level.org.springframework.web=INFO
logging.level.guru.springframework.blogs.controllers=INFO
logging.level.org.hibernate=ERROR
logging.file=logs/spring-boot-logging.log
log4j.logger.org.thymeleaf=DEBUG


spring.mail.host=smtp.gmail.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false


